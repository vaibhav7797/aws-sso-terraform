---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: Terraform AWS SSO

# License of this project
license: "APACHE"

# Canonical GitHub repo
github_repo: clouddrove/terraform-aws-sso

# Badges to display
badges:
  - name: "Terraform"
    image: "https://img.shields.io/badge/terraform-v1.1.7-green"
    url: "https://www.terraform.io"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-APACHE-blue.svg"
    url: "LICENSE.md"
  - name: "tfsec"
    image: "https://github.com/clouddrove/terraform-aws-elasticache/actions/workflows/tfsec.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-aws-elasticache/actions/workflows/tfsec.yml"
  - name: "static-checks"
    image: "https://github.com/clouddrove/terraform-aws-elasticache/actions/workflows/terraform.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-aws-elasticache/actions/workflows/terraform.yml"

#  description of this project
# yamllint disable rule:line-length
description: |-
  Terraform module to create AWS SSO permission sets and account_assignments.

# extra content
include:
  - "terraform.md"

# How to use this project
# yamllint disable rule:line-length
usage : |-
  Here are some examples of how you can use this module in your inventory structure:
  ### Permission sets
```hcl
    module "permission_sets" {
  source = "../../modules/permission-sets"

  permission_sets = [
    {
      name               = "AdministratorAccess-c",
      environment        = "prod"
      label_order        = ["name", "environment"]
      description        = "Allow Full Access to the account",
      relay_state        = "",
      session_duration   = "",
      inline_policy      = "",
      policy_attachments = ["arn:aws:iam::aws:policy/AdministratorAccess"]
      customer_managed_policy_attachments = [{
        name = aws_iam_policy.S3Access.name
        path = aws_iam_policy.S3Access.path
      }]
    },
    {
      name                                = "S3AdministratorAccess",
      environment                         = "prod"
      label_order                         = ["name", "environment"]
      description                         = "Allow Full S3 Admininstrator access to the account",
      relay_state                         = "",
      session_duration                    = "",
      inline_policy                       = data.aws_iam_policy_document.S3Access.json,
      policy_attachments                  = []
      customer_managed_policy_attachments = []
    }
  ]
}

```

  ### SSO account assignments
```hcl
    module "sso_account_assignments" {
  source = "../../modules/account-assignments"

  account_assignments = [
    {
      account             = "26647501****", # Represents the "production" account
      permission_set_arn  = module.permission_sets.permission_sets["AdministratorAccess-c"].arn,
      permission_set_name = "AdministratorAccess",
      principal_type      = "GROUP",
      principal_name      = "testing"
    },
    {
      account             = "26647501***",
      permission_set_arn  = module.permission_sets.permission_sets["S3AdministratorAccess"].arn,
      permission_set_name = "S3AdministratorAccess",
      principal_type      = "GROUP",
      principal_name      = "Production"
    },
    {
      account             = "266475012***", # Represents the "Sandbox" account
      permission_set_arn  = module.permission_sets.permission_sets["AdministratorAccess-c"].arn,
      permission_set_name = "AdministratorAccess",
      principal_type      = "GROUP",
      principal_name      = "Dev"
    },
  ]

}

```

